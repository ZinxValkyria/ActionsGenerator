name: "Terraform Test GitHub Actions"

on:
  workflow_dispatch:  # Allows manual trigger of the workflow
    paths:
      - 'terraform/**'  # Trigger only for changes in the terraform directory

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}

jobs:
  terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform init
        run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"
        working-directory: ./terraform

      - name: Terraform format check
        run: terraform fmt -check
        working-directory: ./terraform

      - name: Terraform validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform plan
        run: terraform plan -no-color -input=false
        working-directory: ./terraform

      - name: Terraform apply
        run: terraform apply --auto-approve
        working-directory: ./terraform
        if: github.event_name == 'workflow_dispatch'  # Optional: only apply on manual trigger

      # Optional: Separate destroy job for controlled usage
      destroy:
        name: "Terraform Destroy"
        runs-on: ubuntu-latest
        needs: terraform
        steps:
          - name: Checkout the repository
            uses: actions/checkout@v2

          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v2
            with:
              terraform_version: 1.3.0

          - name: Terraform destroy
            run: terraform destroy --auto-approve
            working-directory: ./terraform
            if: github.event_name == 'workflow_dispatch'  # Optional: only destroy on manual trigger
