name: Snyk Security Scans (RC Branch PRs)

on:
  pull_request:
    branches:
      - rc/*

permissions:
  contents: read
  security-events: write

jobs:
  dependency-scan:
    name: Dependency Scan (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Setup Snyk CLI
        uses: snyk/actions/setup@master

      - name: Snyk Dependency Test & SARIF
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test terraform/
          args: >
            --file=requirements.txt
            --org=${{ secrets.SNYK_ORG_ID_NOONEBLAIN }}
            --target-reference=${{ github.head_ref }}
            --project-name="actions-generator-ci-deps-${{ github.head_ref }}"
            --sarif-file-output=dependency.sarif

      - name: Upload Dependency SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: dependency.sarif

  iac-scan:
    name: IaC Scan (Terraform/HCL)
    runs-on: ubuntu-latest
    needs: dependency-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Snyk CLI
        uses: snyk/actions/setup@master

      - name: Snyk IaC Test & SARIF
        uses: snyk/actions/iac@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test terraform/
          args: >
            --org=${{ secrets.SNYK_ORG_ID_NOONEBLAIN }}
            --target-reference=${{ github.head_ref }}
            --project-name="actions-generator-ci-iac-${{ github.head_ref }}"
            --sarif-file-output=iac.sarif

      - name: Upload IaC SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: iac.sarif

  sast-scan:
    name: SAST Scan (Code Security)
    runs-on: ubuntu-latest
    needs: iac-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Snyk CLI
        uses: snyk/actions/setup@master

      - name: Snyk Code Test & SARIF
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: >
            --org=${{ secrets.SNYK_ORG_ID_NOONEBLAIN }}
            --target-reference=${{ github.head_ref }}
            --project-name="actions-generator-ci-sast-${{ github.head_ref }}"
            --sarif-file-output=sast.sarif

      - name: Upload SAST SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sast.sarif
