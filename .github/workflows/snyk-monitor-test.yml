name: Snyk Security Scans (RC Branch PRs)

concurrency:
  group: snyk-security-${{ github.event.number || github.run_id }}
  cancel-in-progress: false

on:
  pull_request:
    branches:
      - rc/*

permissions:
  contents: read
  security-events: write

jobs:
  snyk-scans:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scan-type: [dependency, iac, sast]
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set up Snyk
        uses: snyk/actions/setup@master

      - name: Run Snyk Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          if [ "${{ matrix.scan-type }}" == "dependency" ]; then
            snyk monitor --file=requirements.txt \
              --org=${{ secrets.SNYK_ORG_ID_NOONEBLAIN }} \
              --severity-threshold=high \
              --project-name="actions-generator-ci:deps-${{ github.base_ref }}" \
              --target-reference=${{ github.head_ref }}
          
          elif [ "${{ matrix.scan-type }}" == "iac" ]; then
            snyk iac test --report \
              --org=${{ secrets.SNYK_ORG_ID_NOONEBLAIN }} \
              --severity-threshold=high \
              --project-name="actions-generator-ci:iac-${{ github.base_ref }}" \
              --target-reference=${{ github.head_ref }}
          
          elif [ "${{ matrix.scan-type }}" == "sast" ]; then
            snyk code test --report \
              --org=${{ secrets.SNYK_ORG_ID_NOONEBLAIN }} \
              --severity-threshold=high \
              --project-name="actions-generator-ci:sast-${{ github.base_ref }}" \
              --target-reference=${{ github.head_ref }}
          fi
