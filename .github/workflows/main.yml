name: Dockerize, Test, and Deploy

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_API_KEY }}

      - name: Set Docker image tag
        id: docker_tag
        run: |
          IMAGE_TAG="${GITHUB_SHA::7}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "::set-output name=IMAGE_TAG::$IMAGE_TAG"
          
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/actions_generator:${{ env.IMAGE_TAG }} .
        
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/actions_generator:${{ env.IMAGE_TAG }}

  test_docker_image:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build_docker_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Test Docker Image
        run: |
          docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/actions_generator:${{ needs.build_docker_image.outputs.IMAGE_TAG }} /bin/bash -c "pytest"

  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: test_docker_image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_image_tag: ${{ needs.build_docker_image.outputs.IMAGE_TAG }}
          
  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: terraform_apply

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        env:
          TF_VAR_image_tag: ${{ needs.build_docker_image.outputs.IMAGE_TAG }}
