name: "Terraform test GH actions"

on:
  workflow_dispatch:
    paths:
      - 'terraform/**'  # Manually trigger the workflow for changes in the terraform directory

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}  # Add this if using S3 for state
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
  NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}

jobs:
  terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          
      - name: Terraform format
        id: fmt
        run: terraform fmt

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=${{ env.BUCKET_TF_STATE }}"

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false \
          -var "cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -var "cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}" \
          -var "new_relic_license_key=${{ secrets.NEW_RELIC_LICENSE_KEY }}"

      - name: Terraform apply
        id: apply
        run: terraform apply --auto-approve \
          -var "cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -var "cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}" \
          -var "new_relic_license_key=${{ secrets.NEW_RELIC_LICENSE_KEY }}"

      - name: Terraform destroy
        id: destroy
        run: terraform destroy --auto-approve \
          -var "cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}" \
          -var "cloudflare_zone_id=${{ secrets.CLOUDFLARE_ZONE_ID }}" \
          -var "new_relic_license_key=${{ secrets.NEW_RELIC_LICENSE_KEY }}"
