name: MY NEW PIPELINE

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions: write-all

jobs:
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-latest

    outputs:
      IMAGE_TAG: ${{ steps.docker_tag.outputs.IMAGE_TAG }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_API_KEY }}

      - name: Set Docker image tag
        id: docker_tag
        run: |
          IMAGE_TAG="${GITHUB_SHA::7}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "::set-output name=IMAGE_TAG::$IMAGE_TAG"
          
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/actions_generator:${{ env.IMAGE_TAG }} .
        
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/actions_generator:${{ env.IMAGE_TAG }}

  apply:
    name: Terraform Apply
    needs: [build_and_push]
    runs-on: ubuntu-latest
    environment:
      IMAGE_TAG: ${{ needs.build_and_push.outputs.IMAGE_TAG }}  # Passing IMAGE_TAG to the environment
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Terraform Apply
        run: |
          # Add the terraform apply command here
          terraform init
          terraform apply -auto-approve

  destroy:
    name: Terraform Destroy
    needs: [apply]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Terraform Destroy
        run: |
          # Add the terraform destroy command here
          terraform init
          terraform destroy -auto-approve
